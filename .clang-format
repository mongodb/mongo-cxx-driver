---
Language:        Cpp
AccessModifierOffset: -1
AlignAfterOpenBracket: AlwaysBreak
AlignArrayOfStructures: None
AlignConsecutiveAssignments:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    true
AlignConsecutiveBitFields:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveDeclarations:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveMacros:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveShortCaseStatements:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCaseArrows: false
  AlignCaseColons: false
AlignConsecutiveTableGenBreakingDAGArgColons:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveTableGenCondOperatorColons:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveTableGenDefinitionColons:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignEscapedNewlines: Left
AlignOperands:   Align
AlignTrailingComments:
  Kind:            Always
  OverEmptyLines:  0
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: false
AllowBreakBeforeNoexceptSpecifier: Never
AllowShortBlocksOnASingleLine: Never
AllowShortCaseExpressionOnASingleLine: true
AllowShortCaseLabelsOnASingleLine: false
AllowShortCompoundRequirementOnASingleLine: true
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AttributeMacros:
  - BSONCXX_ABI_CDECL
  - BSONCXX_ABI_EXPORT
  - BSONCXX_ABI_NO_EXPORT
  - BSONCXX_DEPRECATED
  - BSONCXX_ENUM
  - BSONCXX_PRIVATE_PRAGMA
  - BSONCXX_PRIVATE_RETURNS
  - MONGOCXX_ABI_CDECL
  - MONGOCXX_ABI_EXPORT
  - MONGOCXX_ABI_NO_EXPORT
  - MONGOCXX_DEPRECATED
BinPackArguments: false
BinPackParameters: false
BitFieldColonSpacing: Both
BraceWrapping:
  AfterCaseLabel:  false
  AfterClass:      false
  AfterControlStatement: Never
  AfterEnum:       false
  AfterExternBlock: false
  AfterFunction:   false
  AfterNamespace:  false
  AfterObjCDeclaration: false
  AfterStruct:     false
  AfterUnion:      false
  BeforeCatch:     false
  BeforeElse:      false
  BeforeLambdaBody: false
  BeforeWhile:     false
  IndentBraces:    false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true
BreakAdjacentStringLiterals: true
BreakAfterAttributes: Leave
BreakAfterJavaFieldAnnotations: false
BreakAfterReturnType: None
BreakArrays:     true
BreakBeforeBinaryOperators: None
BreakBeforeConceptDeclarations: Always
BreakBeforeBraces: Attach
BreakBeforeInlineASMColon: OnlyMultiline
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeColon
BreakFunctionDefinitionParameters: false
BreakInheritanceList: BeforeColon
BreakStringLiterals: true
BreakTemplateDeclarations: Yes
ColumnLimit:     120
CommentPragmas:  '^\s*(@(addtogroup|copydoc|defgroup|fn|ref)|- )'
CompactNamespaces: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DerivePointerAlignment: false
DisableFormat:   false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: LogicalBlock
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
ForEachMacros: []
IfMacros: []
IncludeBlocks:   Regroup
IncludeCategories:
  - Regex: '".*"' # relative headers
    Priority: 10
  - Regex: 'bsoncxx/v1/.*/prelude\.hpp' # v1 preludes
    Priority: 20
  - Regex: 'mongocxx/v1/.*/prelude\.hpp' # v1 preludes
    Priority: 21
  - Regex: 'bsoncxx/v1/.*(-|\/)fwd\.hpp' # v1 forward headers
    Priority: 22
  - Regex: 'mongocxx/v1/.*(-|\/)fwd\.hpp' # v1 forward headers
    Priority: 23
  - Regex: 'bsoncxx/v1/.*\.hpp' # v1 public headers
    Priority: 24
  - Regex: 'mongocxx/v1/.*\.hpp' # v1 public headers
    Priority: 25
  - Regex: 'bsoncxx/v1/.*\.hh' # v1 internal headers
    Priority: 26
  - Regex: 'mongocxx/v1/.*\.hh' # v1 internal headers
    Priority: 27
  - Regex: 'bsoncxx/private/.*' # private headers
    Priority: 60
  - Regex: 'mongocxx/private/.*' # private headers
    Priority: 61
  - Regex: 'bsoncxx/config/prelude\.(hpp|hh)' # v_noabi preludes
    Priority: 62
  - Regex: 'mongocxx/config/prelude\.(hpp|hh)' # v_noabi preludes
    Priority: 63
  - Regex: 'bsoncxx/test/.*' # test headers
    Priority: 70
  - Regex: 'mongocxx/test/.*' # test headers
    Priority: 71
  - Regex: '<[[:alnum:]_.]+>' # system headers
    Priority: 30
  - Regex: 'bsoncxx/.*(-|\/)fwd\.(hpp|hh)' # all remaining forward headers
    Priority: 40
  - Regex: 'mongocxx/.*(-|\/)fwd\.(hpp|hh)' # all remaining forward headers
    Priority: 41
  - Regex: 'bsoncxx/.*\.hpp' # all remaining public headers
    Priority: 50
  - Regex: 'mongocxx/.*\.hpp' # all remaining public headers
    Priority: 51
  - Regex: 'bsoncxx/.*\.hh' # all remaining internal headers
    Priority: 52
  - Regex: 'mongocxx/.*\.hh' # all remaining internal headers
    Priority: 53
  - Regex: '.*' # all other headers (third party)
    Priority: 90
IncludeIsMainRegex: '([-_](test|unittest))?$'
IncludeIsMainSourceRegex: ''
IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: true
IndentExternBlock: AfterExternBlock
IndentGotoLabels: true
IndentPPDirectives: None
IndentRequiresClause: true
IndentWidth:     4
IndentWrappedFunctionNames: false
InsertBraces:    false
InsertNewlineAtEOF: true
InsertTrailingCommas: None
IntegerLiteralSeparator:
  Binary:          0
  BinaryMinDigits: 0
  Decimal:         0
  DecimalMinDigits: 0
  Hex:             0
  HexMinDigits:    0
JavaScriptQuotes: Leave
JavaScriptWrapImports: true
KeepEmptyLines:
  AtEndOfFile:     false
  AtStartOfBlock:  false
  AtStartOfFile:   false
LambdaBodyIndentation: Signature
LineEnding:      DeriveLF
MacroBlockBegin: ''
MacroBlockEnd:   ''
MainIncludeChar: Quote
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
ObjCBinPackProtocolList: Never
ObjCBlockIndentWidth: 2
ObjCBreakBeforeNestedBlockParam: true
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: true
PackConstructorInitializers: NextLine
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 1
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakOpenParenthesis: 0
PenaltyBreakScopeResolution: 5000
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyIndentedWhitespace: 0
PenaltyReturnTypeOnItsOwnLine: 200
PointerAlignment: Left
PPIndentWidth:   -1
QualifierAlignment: Right
RawStringFormats: []
ReferenceAlignment: Pointer
ReflowComments:  true
RemoveBracesLLVM: false
RemoveParentheses: Leave
RemoveSemicolon: false
RequiresClausePosition: OwnLine
RequiresExpressionIndentation: OuterScope
SeparateDefinitionBlocks: Leave
ShortNamespaceLines: 0
SkipMacroDefinitionBody: false
SortIncludes:    CaseSensitive
SortJavaStaticImport: Before
SortUsingDeclarations: LexicographicNumeric
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeJsonColon: false
SpaceBeforeParens: ControlStatements
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: true
  AfterFunctionDefinitionName: false
  AfterFunctionDeclarationName: false
  AfterIfMacros:   true
  AfterOverloadedOperator: false
  AfterPlacementOperator: true
  AfterRequiresInClause: false
  AfterRequiresInExpression: false
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpacesBeforeTrailingComments: 1
SpacesInAngles:  Never
SpacesInContainerLiterals: true
SpacesInLineCommentPrefix:
  Minimum:         1
  Maximum:         -1
SpacesInParens:  Never
SpacesInParensOptions:
  ExceptDoubleParentheses: false
  InCStyleCasts:   false
  InConditionalStatements: false
  InEmptyParentheses: false
  Other:           false
SpacesInSquareBrackets: false
Standard:        Cpp11
StatementAttributeLikeMacros: []
StatementMacros:
  - BSONCXX_PRIVATE_FORCE_SEMICOLON
  - BSONCXX_PRIVATE_IF_CLANG
  - BSONCXX_PRIVATE_IF_GCC
  - BSONCXX_PRIVATE_IF_GNU_LIKE
  - BSONCXX_PRIVATE_IF_MSVC
  - BSONCXX_PRIVATE_WARNINGS_DISABLE
  - BSONCXX_PRIVATE_WARNINGS_POP
  - BSONCXX_PRIVATE_WARNINGS_PUSH
  - BSONCXX_SUPPRESS_DEPRECATION_WARNINGS_BEGIN
  - BSONCXX_SUPPRESS_DEPRECATION_WARNINGS_END
TableGenBreakInsideDAGArg: DontBreak
TabWidth:        8
TypenameMacros:
  - BSONCXX_ABI_EXPORT_CDECL
  - BSONCXX_ABI_EXPORT_CDECL_TESTING
  - BSONCXX_ABI_EXPORT_TESTING
  - MONGOCXX_ABI_EXPORT_CDECL
  - MONGOCXX_ABI_EXPORT_CDECL_TESTING
  - MONGOCXX_ABI_EXPORT_TESTING
UseTab:          Never
VerilogBreakBetweenInstancePorts: true
WhitespaceSensitiveMacros: []
...
