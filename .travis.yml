dist: trusty
sudo: required

language: cpp

compiler:
    - gcc
    - clang

env:

    matrix:
        - CONFIG=Release
        - CONFIG=Debug

# Setup required repositories before installation
before_install:
    # Add the modern toolchain repositories (llvm repo depends on ubunut-toolchain-r + gcc)
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - sudo add-apt-repository -y 'deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.6 main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -

    # Update all the repositories
    - sudo apt-get update -qq

    # Mongo C Driver
    - git clone https://github.com/mongodb/mongo-c-driver.git

install:
    # GCC
    - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.9; export CXX="g++-4.9"; export CC="gcc-4.9"; fi

    # Clang
    - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.6; export CXX="clang++-3.6"; export CC="clang-3.6"; fi

    # CMake
    - sudo apt-get install -qq cmake

    # Install and start mongod.
    - sudo apt-get install -qq libsnmp30
    - curl --retry 8 http://downloads.10gen.com/linux/mongodb-linux-x86_64-enterprise-ubuntu1404-latest.tgz --max-time 300 --output mongodb-binaries.tgz
    - tar -xf mongodb-binaries.tgz
    - rm mongodb-binaries.tgz
    - mv mongodb* mongodb
    - ./mongodb/bin/mongod --version
    - mkdir ./mongodb/data
    - ./mongodb/bin/mongod  --dbpath ./mongodb/data --logpath ./mongodb/logs --fork --setParameter enableTestCommands=1

    # Install Mongo C Driver
    - pushd mongo-c-driver

    - git checkout master

    - sudo pip install GitPython
    - python build/calc_release_version.py > VERSION_CURRENT
    - python build/calc_release_version.py -p > VERSION_RELEASED
    - cmake -DENABLE_TESTS=OFF -DENABLE_EXAMPLES=OFF -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF
    - make
    - sudo make install

    - popd

before_script:
    - $CC --version
    - $CXX --version

    # Build the driver and the tests
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=$CONFIG -DCMAKE_C_FLAGS="-Wall -Wextra -Wno-attributes -Werror -Wno-error=missing-field-initializers" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Wno-attributes -Werror -Wno-error=missing-field-initializers --coverage" ..

script:
    - make format-lint

    - make all

    # Run bsoncxx tests with catch
    - ./src/bsoncxx/test/test_bson

    # Run mongocxx tests with catch
    - ./src/mongocxx/test/test_driver

    # Run mongocxx instance tests with catch
    - ./src/mongocxx/test/test_instance

    # Install headers and libs for the examples
    - make install

    # Make the examples
    - make examples

    # Run the examples
    - make run-examples

after_success:
    # Uploading report to CodeCov
    - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
