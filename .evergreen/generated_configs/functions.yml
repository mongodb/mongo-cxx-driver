functions:
  abi-compliance-check:
    - command: subprocess.exec
      type: setup
      params:
        binary: bash
        args:
          - -c
          - mongo-cxx-driver/.evergreen/scripts/abi-compliance-check-setup.sh
    - command: subprocess.exec
      type: test
      params:
        binary: bash
        args:
          - -c
          - mongo-cxx-driver/.evergreen/scripts/abi-compliance-check-test.sh
    - command: s3.put
      type: system
      params:
        display_name: "ABI Compliance Check (Stable): "
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        bucket: mciuploads
        content_type: text/html
        local_files_include_filter: cxx-abi/compat_reports/**/compat_report.html
        permissions: public-read
        remote_file: mongo-cxx-driver/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/abi-compliance-check/abi/
    - command: s3.put
      type: system
      params:
        display_name: "ABI Compliance Check (Stable): "
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        bucket: mciuploads
        content_type: text/plain
        local_files_include_filter: cxx-abi/logs/**/log.txt
        permissions: public-read
        remote_file: mongo-cxx-driver/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/abi-compliance-check/abi/
    - command: s3.put
      type: system
      params:
        display_name: "ABI Compliance Check (Unstable): "
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        bucket: mciuploads
        content_type: text/html
        local_files_include_filter: cxx-noabi/compat_reports/**/compat_report.html
        permissions: public-read
        remote_file: mongo-cxx-driver/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/abi-compliance-check/noabi/
    - command: s3.put
      type: system
      params:
        display_name: "ABI Compliance Check (Unstable): "
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        bucket: mciuploads
        content_type: text/plain
        local_files_include_filter: cxx-noabi/logs/**/log.txt
        permissions: public-read
        remote_file: mongo-cxx-driver/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/abi-compliance-check/noabi/
  abi-prohibited-symbols:
    command: subprocess.exec
    type: test
    params:
      binary: bash
      args:
        - -c
        - mongo-cxx-driver/.evergreen/scripts/abi-prohibited-symbols-test.sh
  abidiff:
    - command: subprocess.exec
      type: setup
      params:
        binary: bash
        args:
          - -c
          - mongo-cxx-driver/.evergreen/scripts/abidiff-setup.sh
    - command: subprocess.exec
      type: test
      params:
        binary: bash
        args:
          - -c
          - mongo-cxx-driver/.evergreen/scripts/abidiff-test.sh
    - command: s3.put
      type: system
      params:
        display_name: "abidiff (Stable): "
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        bucket: mciuploads
        content_type: text/plain
        local_files_include_filter: cxx-abi/*.txt
        permissions: public-read
        remote_file: mongo-cxx-driver/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/abidiff/abi/
    - command: s3.put
      type: system
      params:
        display_name: "abidiff (Unstable): "
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        bucket: mciuploads
        content_type: text/plain
        local_files_include_filter: cxx-noabi/*.txt
        permissions: public-read
        remote_file: mongo-cxx-driver/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/abidiff/noabi/
  build_mongohouse:
    command: subprocess.exec
    type: setup
    params:
      binary: bash
      args:
        - -c
        - |
          if [ ! -d "drivers-evergreen-tools" ]; then
              git clone https://github.com/mongodb-labs/drivers-evergreen-tools.git
          fi
          cd drivers-evergreen-tools
          export DRIVERS_TOOLS=$(pwd)

          .evergreen/atlas_data_lake/pull-mongohouse-image.sh
  run_mongohouse:
    command: subprocess.exec
    type: setup
    params:
      binary: bash
      args:
        - -c
        - |
          cd drivers-evergreen-tools
          export DRIVERS_TOOLS=$(pwd)

          .evergreen/atlas_data_lake/run-mongohouse-image.sh
  setup:
    - command: subprocess.exec
      type: setup
      params:
        binary: bash
        args:
          - -c
          - |
            set -o errexit
            set -o pipefail
            rm -rf "mongo-cxx-driver"
            rm -fr "mongo-c-driver"
            rm -fr mongod
            rm -fr drivers-evergreen-tools
    - command: git.get_project
      params:
        directory: mongo-cxx-driver
    - command: subprocess.exec
      type: setup
      params:
        binary: bash
        args:
          - -c
          - |
            set -o errexit
            set -o pipefail
            cc --version || true
            c++ --version || true
            gcc --version || true
            g++ --version || true
            clang --version || true
            cmake --version || true
            openssl version || true
  start_mongod:
    - command: subprocess.exec
      type: setup
      params:
        binary: bash
        include_expansions_in_env:
          - build_variant
          - mongodb_version
          - AUTH
          - ORCHESTRATION_FILE
          - REQUIRE_API_VERSION
          - TOPOLOGY
        args:
          - -c
          - mongo-cxx-driver/.evergreen/scripts/start-mongod.sh
    - command: expansions.update
      type: setup
      params:
        file: drivers-evergreen-tools/mo-expansion.yml
  stop_mongod:
    command: subprocess.exec
    type: system
    params:
      binary: bash
      args:
        - -c
        - |
          set -o errexit
          set -o pipefail
          if cd drivers-evergreen-tools/.evergreen/orchestration 2>/dev/null; then
              . ../venv-utils.sh
              if venvactivate venv; then
              mongo-orchestration stop
              fi
          fi
  stub:
    - command: subprocess.exec
      params:
        binary: bash
        args:
          - -c
          - echo "stub!"
  test_mongohouse:
    command: subprocess.exec
    type: test
    params:
      binary: bash
      working_dir: mongo-cxx-driver
      args:
        - -c
        - .evergreen/scripts/test-mongohouse.sh
